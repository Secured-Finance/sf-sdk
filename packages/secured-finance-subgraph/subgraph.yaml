specVersion: 0.0.2
description: Secured Finance is decentralized P2P banking business for digital assets 
repository: https://github.com/secured-finance/secured-finance-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: LoanV2
    network: mainnet
    source:
      address: '0x05b22c7FD08CC68Fd0866b2b1004F3295e69Aa42'
      abi: LoanV2
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Loan
        - LoanSchedule
        - SchedulePayment
      abis:
        - name: LoanV2
          file: ./abis/LoanV2.json
      eventHandlers:
        - event: Register(indexed address,indexed address,bytes32,uint256,uint256,uint256,indexed bytes32)
          handler: handleLoanRegister
        - event: RequestTermination(bytes32,indexed address)
          handler: handleLoanTerminationRequest
        - event: RejectTermination(bytes32,indexed address)
          handler: handleLoanTerminationRejection
        - event: EarlyTermination(bytes32,indexed address,uint256)
          handler: handleLoanEarlyTermination
        - event: MarkToMarket(bytes32,uint256,uint256)
          handler: handleLoanMarkToMarket
        - event: Novation(indexed bytes32,address)
          handler: handleLoanNovation
        - event: Liquidate(bytes32)
          handler: handleLoanLiquidation
      file: ./src/loan.ts
  - kind: ethereum/contract
    name: TermStructure
    network: mainnet
    source:
      address: '0x4c44f15fd2e79C9819024FEf9452042d2df2de26'
      abi: TermStructure
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Term
      abis:
        - name: TermStructure
          file: ./abis/TermStructure.json
      eventHandlers:
        - event: TermAdded(uint256)
          handler: handleNewTerm
        - event: ProductTermSupportUpdated(uint256,bytes4,bytes32,bool)
          handler: handleTermProductSupport
      file: ./src/terms.ts
  - kind: ethereum/contract
    name: ProductAddressResolver
    network: mainnet
    source:
      address: '0x444f310468a3735F3453e982c62E1e99C95f3ff3'
      abi: ProductAddressResolver
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Product
      abis:
        - name: ProductAddressResolver
          file: ./abis/ProductAddressResolver.json
      eventHandlers:
        - event: RegisterProduct(bytes4,indexed address,indexed address)
          handler: handleNewProduct
      file: ./src/product-resolver.ts
  - kind: ethereum/contract
    name: CurrencyController
    network: mainnet
    source:
      address: '0x70b4bff41C2Eb94F44333A1f118937c9064D2Ca6'
      abi: CurrencyController
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Term
      abis:
        - name: CurrencyController
          file: ./abis/CurrencyController.json
      eventHandlers:
        - event: CcyAdded(indexed bytes32,string,uint16,uint256)
          handler: handleNewCurrency
        - event: LTVUpdated(indexed bytes32,uint256)
          handler: handleCurrencyLTVUpdate
        - event: MinMarginUpdated(indexed bytes32,uint256)
          handler: handleCurrencyMinMarginUpdate
        - event: CcySupportUpdate(indexed bytes32,bool)
          handler: handleCurrencySupportUpdate
        - event: CcyCollateralUpdate(indexed bytes32,bool)
          handler: handleCurrencyCollateralSupportUpdate
        - event: PriceFeedAdded(bytes32,string,indexed address)
          handler: handleCurrencyPriceFeed
        - event: PriceFeedRemoved(bytes32,string,indexed address)
          handler: handleCurrencyPriceFeedRemove
      file: ./src/currency-controller.ts
  - kind: ethereum/contract
    name: CloseOutNetting
    network: mainnet
    source:
      address: '0xAb45660e1902202DFA375f44E82279EFE9f7854E'
      abi: CloseOutNetting
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - CloseOutNetting
      abis:
        - name: CloseOutNetting
          file: ./abis/CloseOutNetting.json
      eventHandlers:
        - event: AddCloseOutPayments(indexed address,indexed address,bytes32,uint256,uint256)
          handler: handleCloseOutPaymentIncrease
        - event: RemoveCloseOutPayments(indexed address,indexed address,bytes32,uint256,uint256)
          handler: handleCloseOutPaymentDecrease
      file: ./src/close-out-netting.ts
  - kind: ethereum/contract
    name: PaymentAggregator
    network: mainnet
    source:
      address: '0x0c824b1a58618951De386DE6B2D3c575f8cd3822'
      abi: PaymentAggregator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - TimeSlot
      abis:
        - name: PaymentAggregator
          file: ./abis/PaymentAggregator.json
      eventHandlers:
        - event: RegisterPayment(indexed address,indexed address,bytes32,bytes32,uint256,uint256,uint256,uint256,uint256)
          handler: handleTimeSlotPaymentIncrease
        - event: RemovePayment(indexed address,indexed address,bytes32,bytes32,uint256,uint256,uint256,uint256,uint256)
          handler: handleTimeSlotPaymentDecrease
        - event: VerifyPayment(indexed address,indexed address,bytes32,bytes32,uint256,uint256,uint256,uint256,bytes32)
          handler: handleTimeSlotPaymentVerification
        - event: SettlePayment(indexed address,indexed address,bytes32,bytes32,uint256,uint256,uint256,bytes32)
          handler: handleTimeSlotPaymentSettlement
      file: ./src/payment-aggregator.ts
  - kind: ethereum/contract
    name: CollateralAggregator
    network: mainnet
    source:
      address: '0x6DB01958669DfcD90c504ae9c5A2795C28B25fDc'
      abi: CollateralAggregator
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - CollateralAggregator
        - CollateralVault
        - CollateralUserContract
        - CollateralPosition
        - BilateralPosition
        - CollateralNetting
      abis:
        - name: CollateralAggregator
          file: ./abis/CollateralAggregator.json
      eventHandlers:
        - event: Register(indexed address)
          handler: handleCollateralAggregatorRegistration
        - event: UseUnsettledCollateral(indexed address,bytes32,uint256)
          handler: handleCollateralUnsettledUse
        - event: ReleaseUnsettled(indexed address,bytes32,uint256)
          handler: handleCollateralUnsettledRelease
        - event: UseCollateral(indexed address,indexed address,bytes32,uint256,uint256,bool)
          handler: handleCollateralPositionUse
        - event: Release(indexed address,indexed address,bytes32,uint256,uint256,bool)
          handler: handleCollateralPositionRelease
        - event: SettleCollateral(indexed address,indexed address,bytes32,uint256,uint256)
          handler: handleCollateralPositionSettle
        - event: UpdatePV(indexed address,indexed address,bytes32,uint256,uint256,uint256,uint256)
          handler: handleCollateralPositionUpdatePV
        - event: LiquidationPriceUpdated(uint256,uint256)
          handler: handleCollateralLiquidationPriceUpdate
        - event: MarginCallThresholdUpdated(uint256,uint256)
          handler: handleCollateralMarginCallUpdate
        - event: MinCollateralRatioUpdated(uint256,uint256)
          handler: handleCollateralMinCollateralRatioUpdate
        - event: AutoLiquidationThresholdUpdated(uint256,uint256)
          handler: handleCollateralAutoLiquidationRatioUpdate
        - event: CollateralUserAdded(indexed address)
          handler: handleCollateralUserAdded
        - event: CollateralUserRemoved(indexed address)
          handler: handleCollateralUserRemoved
        - event: CollateralVaultLinked(indexed address,bytes32,address)
          handler: handleCollateralVaultLinked
        - event: CollateralVaultRemoved(indexed address,bytes32,address)
          handler: handleCollateralVaultRemoved
      file: ./src/collateral-aggregator.ts
  - kind: ethereum/contract
    name: LendingMarketController
    network: mainnet
    source:
      address: '0x0d1a99841ae744556D6397826F2d158993287947'
      abi: LendingMarketController
      # startBlock: 10026125
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - LendingMarketController
      abis:
        - name: LendingMarketController
          file: ./abis/LendingMarketController.json
      eventHandlers:
        - event: LendingMarketCreated(bytes32,uint256,indexed address)
          handler: handleNewLendingMarket
      file: ./src/lendingController.ts
templates:
  - kind: ethereum/contract
    name: LendingMarket
    network: mainnet
    source:
      abi: LendingMarket
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - LendingMarket
        - LendingMarketOrderRow
        - LendingMarketOrderItem
        - FilledLendingMarketOrder
      abis:
        - name: LendingMarket
          file: ./abis/LendingMarket.json
      eventHandlers:
        - event: MakeOrder(uint256,indexed address,uint8,bytes32,uint256,uint256,uint256)
          handler: handleMakeLendingOrder
        - event: TakeOrder(uint256,indexed address,uint8,uint256,uint256)
          handler: handleTakeLendingOrder
        - event: CancelOrder(uint256,indexed address,uint8,uint256,uint256)
          handler: handleCancelLendingOrder
      file: ./src/lendingMarket.ts
  - kind: ethereum/contract
    name: CollateralVault
    network: mainnet
    source:
      abi: CollateralVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - CollateralVault
      abis:
        - name: CollateralVault
          file: ./abis/CollateralVault.json
      eventHandlers:
        - event: Deposit(address,uint256)
          handler: handleCollateralVaultDeposit
        - event: PositionWithdraw(address,address,uint256)
          handler: handleCollateralVaultDepositInPosition
        - event: Withdraw(address,uint256)
          handler: handleCollateralVaultWithdraw
        - event: PositionWithdraw(address,address,uint256)
          handler: handleCollateralVaultWithdrawFromPosition
        - event: Liquidate(address,address,uint256)
          handler: handleCollateralVaultLiquidation
        - event: LiquidateIndependent(address,address,uint256)
          handler: handleCollateralVaultLiquidationIndependent
        - event: RebalanceTo(address,address,uint256)
          handler: handleCollateralVaultRebalanceTo
        - event: RebalanceFrom(address,address,uint256)
          handler: handleCollateralVaultRebalanceFrom
        - event: RebalanceBetween(address,address,address,uint256)
          handler: handleCollateralVaultRebalanceBetween
      file: ./src/collateral-vault.ts
