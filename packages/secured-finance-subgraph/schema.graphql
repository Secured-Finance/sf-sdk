type User @entity {
  id: ID!
  owner: Bytes!
  totalLendInETH: BigInt!
  totalBorrowInETH: BigInt!
  updatedAt: BigInt!

  openOrders: [LendingMarketOrder!] @derivedFrom(field: "makerUser")
  madeOrders: [FilledLendingMarketOrder!] @derivedFrom(field: "makerUser")
  takenOrders: [FilledLendingMarketOrder!] @derivedFrom(field: "takerUser")
}

type LendingMarket @entity {
  id: ID!
  marketAddr: Bytes!
  controllerAddr: Bytes!
  currencyIdentifier: Bytes!
  currency: Currency!
  term: BigInt!
  spread: BigInt!
  marketRate: BigInt!
  orderCount: Int!

  # liquidity
  totalAvailableLiquidity: BigInt!
  totalLiquidity: BigInt!

  # liquidity in USD
  totalAvailableLiquidityInUSD: BigInt!
  totalLiquidityInUSD: BigInt!

  # creation timestamps
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!

  # two-sided orderbook
  lendOrderbook: [LendingMarketOrderRow!] @derivedFrom(field: "lendMarket")
  borrowOrderbook: [LendingMarketOrderRow!] @derivedFrom(field: "borrowMarket")

  orders: [LendingMarketOrder!] @derivedFrom(field: "lendingMarket")
  tradeHistory: [FilledLendingMarketOrder!] @derivedFrom(field: "market")
}

type LendingMarketOrderRow @entity {
  id: ID!
  currencyIdentifier: Bytes!
  currency: Currency!
  side: Int!
  marketAddr: Bytes!
  lendMarket: LendingMarket!
  borrowMarket: LendingMarket!
  term: BigInt!
  rate: BigInt!
  orders: [LendingMarketOrder!] @derivedFrom(field: "row")
  totalAmount: BigInt!
  # totalUSDAmount: BigInt!

  # creation timestamps
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}

enum OrderState {
  ACTIVE
  CANCELED
}

type LendingMarketOrder @entity {
  id: ID!
  orderId: BigInt!
  currencyName: String!
  currency: Currency!
  side: Int!
  row: LendingMarketOrderRow
  marketAddr: Bytes!
  lendingMarket: LendingMarket
  orderState: OrderState!
  term: BigInt!
  rate: BigInt!
  amount: BigInt!
  maker: Bytes!
  makerUser: User!

  # creation timestamps
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!

  # # updated timestamps
  updatedAtTimestamp: BigInt!
  updatedAtBlockNumber: BigInt!
}

type FilledLendingMarketOrder @entity {
  id: ID!
  orderId: BigInt!
  currencyName: String!
  currency: Currency!
  side: Int!
  market: LendingMarket!
  marketAddr: Bytes!
  term: BigInt!
  rate: BigInt!
  amount: BigInt!
  maker: Bytes!
  makerUser: User!
  taker: Bytes!
  takerUser: User!

  # creation timestamps
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}

type Currency @entity {
  id: ID!
  identifier: Bytes!
  name: String!
  shortName: String!
  chainId: Int!
  ltv: BigInt!
  minMargin: BigInt!
  isSupported: Boolean!
  isCollateral: Boolean!
}
