name: Validate Pull Request
on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  checks-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.MACHINE_USER_APP_ID }}
          private_key: ${{ secrets.MACHINE_USER_PRIVATE_KEY }}
      - name: Set env
        run: |
          echo "NPM_AUTH_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV
      - name: Install Dependencies
        run: npm ci
      - name: Bootstrap Repo
        run: npm run bootstrap
      - name: Lint Code
        run: npm run lint:check
      - name: Format Code
        run: npm run format
      - name: Build Repo
        run: npm run build
      - name: Generate artifacts
        run: npm run codegen
      - name: Execute Test
        run: npm run test-all
      - name: Execute Coverage
        run: npm run coverage
      - name: Upload ChainLink coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./packages/chainlink-external-adapter/coverage/coverage-final.json
          flags: chainlink-external-adapter
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload Client coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./packages/sf-client/coverage/coverage-final.json
          flags: sf-client
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload Graph Client coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./packages/sf-graph-client/coverage/coverage-final.json
          flags: sf-graph-client
          token: ${{ secrets.CODECOV_TOKEN }}
